|brick_breaker
ADC_CLK_10 => ~NO_FANOUT~
MAX10_CLK1_50 => sound_board:u0.CLK
MAX10_CLK1_50 => myPLL:u2.inclk0
MAX10_CLK2_50 => ~NO_FANOUT~
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
LEDR[0] << <GND>
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << <GND>
LEDR[6] << <GND>
LEDR[7] << <GND>
LEDR[8] << <GND>
LEDR[9] << <GND>
SW[0] => sound_board:u0.SOUND_EFFECT[0]
SW[1] => sound_board:u0.SOUND_EFFECT[1]
SW[2] => sound_board:u0.SOUND_EFFECT[2]
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
VGA_R[0] << sync:u3.pixel_data[8]
VGA_R[1] << sync:u3.pixel_data[9]
VGA_R[2] << sync:u3.pixel_data[10]
VGA_R[3] << sync:u3.pixel_data[11]
VGA_G[0] << sync:u3.pixel_data[4]
VGA_G[1] << sync:u3.pixel_data[5]
VGA_G[2] << sync:u3.pixel_data[6]
VGA_G[3] << sync:u3.pixel_data[7]
VGA_B[0] << sync:u3.pixel_data[0]
VGA_B[1] << sync:u3.pixel_data[1]
VGA_B[2] << sync:u3.pixel_data[2]
VGA_B[3] << sync:u3.pixel_data[3]
VGA_HS << sync:u3.hs_sig
VGA_VS << sync:u3.vs_sig
ARDUINO_IO[0] << <GND>
ARDUINO_IO[1] << <GND>
ARDUINO_IO[2] << <GND>
ARDUINO_IO[3] << <GND>
ARDUINO_IO[4] << <GND>
ARDUINO_IO[5] << <GND>
ARDUINO_IO[6] << <GND>
ARDUINO_IO[7] << sound_board:u0.SOUND_OUT
ARDUINO_IO[8] << <GND>
ARDUINO_IO[9] << <GND>
ARDUINO_IO[10] << <GND>
ARDUINO_IO[11] << <GND>
ARDUINO_IO[12] << <GND>
ARDUINO_IO[13] << <GND>
ARDUINO_IO[14] << <GND>
ARDUINO_IO[15] << <GND>
ARDUINO_RESET_N <> <UNC>


|brick_breaker|sound_board:u0
CLK => ready.CLK
CLK => sound_count[0].CLK
CLK => sound_count[1].CLK
CLK => sound_count[2].CLK
CLK => sound_count[3].CLK
CLK => sound_count[4].CLK
CLK => sound_count[5].CLK
CLK => sound_count[6].CLK
CLK => sound_count[7].CLK
CLK => sound_count[8].CLK
CLK => sound_count[9].CLK
CLK => sound_count[10].CLK
CLK => sound_count[11].CLK
CLK => sound_count[12].CLK
CLK => sound_count[13].CLK
CLK => sound_count[14].CLK
CLK => sound_count[15].CLK
CLK => sound_count[16].CLK
CLK => sound_count[17].CLK
CLK => sound_count[18].CLK
CLK => sound_count[19].CLK
CLK => sound_count[20].CLK
CLK => sound_count[21].CLK
CLK => sound_count[22].CLK
CLK => sound_count[23].CLK
CLK => sound_count[24].CLK
CLK => sound_count[25].CLK
CLK => sound_count[26].CLK
CLK => sound_count[27].CLK
CLK => sound_count[28].CLK
CLK => sound_count[29].CLK
CLK => sound_count[30].CLK
CLK => sound_count[31].CLK
CLK => output.CLK
CLK => sound_effect_sig[0].CLK
CLK => sound_effect_sig[1].CLK
CLK => sound_effect_sig[2].CLK
SOUND_EFFECT[0] => sound_effect_sig[0].DATAIN
SOUND_EFFECT[1] => sound_effect_sig[1].DATAIN
SOUND_EFFECT[2] => sound_effect_sig[2].DATAIN
SOUND_OUT <= output.DB_MAX_OUTPUT_PORT_TYPE


|brick_breaker|myPLL:u2
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|brick_breaker|myPLL:u2|altpll:altpll_component
inclk[0] => myPLL_altpll:auto_generated.inclk[0]
inclk[1] => myPLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|brick_breaker|myPLL:u2|altpll:altpll_component|myPLL_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|brick_breaker|sync:u3
clk => y_pos[0].CLK
clk => y_pos[1].CLK
clk => y_pos[2].CLK
clk => y_pos[3].CLK
clk => y_pos[4].CLK
clk => y_pos[5].CLK
clk => y_pos[6].CLK
clk => y_pos[7].CLK
clk => y_pos[8].CLK
clk => y_pos[9].CLK
clk => y_pos[10].CLK
clk => y_pos[11].CLK
clk => y_pos[12].CLK
clk => y_pos[13].CLK
clk => y_pos[14].CLK
clk => y_pos[15].CLK
clk => y_pos[16].CLK
clk => y_pos[17].CLK
clk => y_pos[18].CLK
clk => y_pos[19].CLK
clk => y_pos[20].CLK
clk => y_pos[21].CLK
clk => y_pos[22].CLK
clk => y_pos[23].CLK
clk => y_pos[24].CLK
clk => y_pos[25].CLK
clk => y_pos[26].CLK
clk => y_pos[27].CLK
clk => y_pos[28].CLK
clk => y_pos[29].CLK
clk => y_pos[30].CLK
clk => y_pos[31].CLK
clk => x_pos[0].CLK
clk => x_pos[1].CLK
clk => x_pos[2].CLK
clk => x_pos[3].CLK
clk => x_pos[4].CLK
clk => x_pos[5].CLK
clk => x_pos[6].CLK
clk => x_pos[7].CLK
clk => x_pos[8].CLK
clk => x_pos[9].CLK
clk => x_pos[10].CLK
clk => x_pos[11].CLK
clk => x_pos[12].CLK
clk => x_pos[13].CLK
clk => x_pos[14].CLK
clk => x_pos[15].CLK
clk => x_pos[16].CLK
clk => x_pos[17].CLK
clk => x_pos[18].CLK
clk => x_pos[19].CLK
clk => x_pos[20].CLK
clk => x_pos[21].CLK
clk => x_pos[22].CLK
clk => x_pos[23].CLK
clk => x_pos[24].CLK
clk => x_pos[25].CLK
clk => x_pos[26].CLK
clk => x_pos[27].CLK
clk => x_pos[28].CLK
clk => x_pos[29].CLK
clk => x_pos[30].CLK
clk => x_pos[31].CLK
clk => count2[0].CLK
clk => count2[1].CLK
clk => count2[2].CLK
clk => count2[3].CLK
clk => count2[4].CLK
clk => count2[5].CLK
clk => count2[6].CLK
clk => count2[7].CLK
clk => count2[8].CLK
clk => count2[9].CLK
clk => count2[10].CLK
clk => count2[11].CLK
clk => count2[12].CLK
clk => count2[13].CLK
clk => count2[14].CLK
clk => count2[15].CLK
clk => count2[16].CLK
clk => count2[17].CLK
clk => count2[18].CLK
clk => count2[19].CLK
clk => count2[20].CLK
clk => count2[21].CLK
clk => count2[22].CLK
clk => count2[23].CLK
clk => count2[24].CLK
clk => count2[25].CLK
clk => count2[26].CLK
clk => count2[27].CLK
clk => count2[28].CLK
clk => count2[29].CLK
clk => count2[30].CLK
clk => count2[31].CLK
clk => count1[0].CLK
clk => count1[1].CLK
clk => count1[2].CLK
clk => count1[3].CLK
clk => count1[4].CLK
clk => count1[5].CLK
clk => count1[6].CLK
clk => count1[7].CLK
clk => count1[8].CLK
clk => count1[9].CLK
clk => count1[10].CLK
clk => count1[11].CLK
clk => count1[12].CLK
clk => count1[13].CLK
clk => count1[14].CLK
clk => count1[15].CLK
clk => count1[16].CLK
clk => count1[17].CLK
clk => count1[18].CLK
clk => count1[19].CLK
clk => count1[20].CLK
clk => count1[21].CLK
clk => count1[22].CLK
clk => count1[23].CLK
clk => count1[24].CLK
clk => count1[25].CLK
clk => count1[26].CLK
clk => count1[27].CLK
clk => count1[28].CLK
clk => count1[29].CLK
clk => count1[30].CLK
clk => count1[31].CLK
clk => current_hs_state~1.DATAIN
clk => current_vs_state~1.DATAIN
reset => current_vs_state.OUTPUTSELECT
reset => current_vs_state.OUTPUTSELECT
reset => current_vs_state.OUTPUTSELECT
reset => current_vs_state.OUTPUTSELECT
reset => current_hs_state.OUTPUTSELECT
reset => current_hs_state.OUTPUTSELECT
reset => current_hs_state.OUTPUTSELECT
reset => current_hs_state.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count1.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => count2.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => x_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
reset => y_pos.OUTPUTSELECT
vs_sig <= vs_sig.DB_MAX_OUTPUT_PORT_TYPE
hs_sig <= hs_sig.DB_MAX_OUTPUT_PORT_TYPE
pixel_data[0] <= pixel_data.DB_MAX_OUTPUT_PORT_TYPE
pixel_data[1] <= pixel_data.DB_MAX_OUTPUT_PORT_TYPE
pixel_data[2] <= <GND>
pixel_data[3] <= <GND>
pixel_data[4] <= <GND>
pixel_data[5] <= <GND>
pixel_data[6] <= pixel_data.DB_MAX_OUTPUT_PORT_TYPE
pixel_data[7] <= <GND>
pixel_data[8] <= <GND>
pixel_data[9] <= pixel_data.DB_MAX_OUTPUT_PORT_TYPE
pixel_data[10] <= pixel_data.DB_MAX_OUTPUT_PORT_TYPE
pixel_data[11] <= <GND>
pot[0] => LessThan14.IN64
pot[0] => Div0.IN35
pot[1] => LessThan14.IN63
pot[1] => Div0.IN34
pot[2] => LessThan14.IN62
pot[2] => Div0.IN33
pot[3] => LessThan14.IN61
pot[3] => Div0.IN32
pot[4] => LessThan14.IN60
pot[4] => Div0.IN31
pot[5] => LessThan14.IN59
pot[5] => Div0.IN30
pot[6] => LessThan14.IN58
pot[6] => Div0.IN29
pot[7] => LessThan14.IN57
pot[7] => Div0.IN28
pot[8] => LessThan14.IN56
pot[8] => Div0.IN27
pot[9] => LessThan14.IN55
pot[9] => Div0.IN26
pot[10] => LessThan14.IN54
pot[10] => Div0.IN25
pot[11] => LessThan14.IN53
pot[11] => Div0.IN24


